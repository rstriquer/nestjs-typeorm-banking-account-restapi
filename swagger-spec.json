{"openapi":"3.0.0","paths":{"/v1/accounts":{"post":{"operationId":"AccountController_create","summary":"Add a new account to the system.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateAccountDto"}}}},"responses":{"201":{"description":"The endpoint is working as expected and provide a list of resources.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateAccountDto"}}}}},"tags":["accounts"]},"get":{"operationId":"AccountController_findAll","summary":"List accounts from the system database.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchAccountDto"}}}},"responses":{"200":{"description":"The endpoint is working as expected, the account was found and the data was retrieved as expected.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchAccountsResultDto"}}}},"400":{"description":"One or more parameters was incorrect.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestExceptionDto"}}}},"404":{"description":"No account was found according to the parameters received."}},"tags":["accounts"]}},"/v1/accounts/{id}":{"get":{"operationId":"AccountController_findOne","summary":"Retrieve one account from the system database by account code identification.","parameters":[{"name":"id","required":true,"in":"path","description":"The identification code of the account to search for.","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountDto"}}}},"responses":{"200":{"description":"The endpoint is working as expected, the account was found and the data was retrieved as expected.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchAccountsResultDto"}}}},"404":{"description":"The account with the {id} was NOT found."}},"tags":["accounts"]},"patch":{"operationId":"AccountController_update","summary":"Update one account on the  system database by account code identification.","parameters":[{"name":"id","required":true,"in":"path","description":"The identification code of the account to search for.","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountDto"}}}},"responses":{"200":{"description":"The endpoint is working as expected, the account was found and the data was updated as expected.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchAccountsResultDto"}}}},"400":{"description":"One or more parameters was not correct. More details of the error will be provided on the reply content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestExceptionDto"}}}},"404":{"description":"The account with the {id} was NOT found."}},"tags":["accounts"]},"delete":{"operationId":"AccountController_remove","summary":"Delete an account from the system database.","description":"When deleting an account it deletes all its movements as well.","parameters":[{"name":"id","required":true,"in":"path","description":"The identification code of the account to delete.","schema":{"type":"string"}}],"responses":{"204":{"description":"The endpoint is working as expected, the account was found and successfully deleted."},"404":{"description":"The account with the {id} was NOT found."}},"tags":["accounts"]}},"/v1/movements":{"post":{"operationId":"MovementController_create","summary":"Add a new movement to the system.","parameters":[{"name":"x-user","required":true,"in":"header","schema":{"type":"number"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMovementDto"}}}},"responses":{"201":{"description":"The endpoint is working as expected and a new movement was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Movement"}}}},"400":{"description":"Bad Request. The \"x-user\" user was missing in the query HEADERS."},"401":{"description":"Unauthorized. The \"x-user\" header identification and the \"origin\" field identification are NOT the same!"}},"tags":["movements"]},"get":{"operationId":"MovementController_findAll","summary":"List movements from the system database.","parameters":[{"name":"x-user","required":true,"in":"header","schema":{"type":"number"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchMovementDto"}}}},"responses":{"200":{"description":"The endpoint is working as expected, the account was found and the data was retrieved as expected.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchMovementsResultDto"}}}},"400":{"description":"Bad Request. The \"x-user\" user was missing in the query HEADERS."},"401":{"description":"Unauthorized. The \"x-user\" header identification and the \"origin\" field identification are NOT the same!"},"404":{"description":"No account was found according to the parameters received."}},"tags":["movements"]}},"/v1/movements/pix":{"post":{"operationId":"MovementController_createPix","summary":"Add a new movement to the system by PIX operation.","parameters":[{"name":"x-user","required":true,"in":"header","schema":{"type":"number"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMovementDto"}}}},"responses":{"201":{"description":"The endpoint is working as expected and a new movement was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Movement"}}}},"400":{"description":"Bad Request. The \"x-user\" user was missing in the query HEADERS."},"401":{"description":"Unauthorized. The \"x-user\" header identification and the \"origin\" field identification are NOT the same!"}},"tags":["movements"]}},"/v1/movements/{id}":{"get":{"operationId":"MovementController_findOne","summary":"Retrieve one movement from the system database by movement code identification.","parameters":[{"name":"x-user","required":true,"in":"header","schema":{"type":"number"}},{"name":"id","required":true,"in":"path","description":"The identification code of the movement to search for.","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MovementDto"}}}},"responses":{"200":{"description":"The endpoint is working as expected, the movement was found and the data was retrieved as expected.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchMovementsResultDto"}}}},"400":{"description":"Bad Request. The \"x-user\" user was missing in the query HEADERS."},"401":{"description":"Unauthorized. The \"x-user\" header identification and the \"origin\" field identification are NOT the same!"},"404":{"description":"The movement with the {id} was NOT found."}},"tags":["movements"]}},"/v1/health-check":{"get":{"operationId":"HealthCheckController_getHealthCheck","summary":"Tells whether the application is ok.","description":"Check the system services and reply if everything is alright.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthCheckDTO"}}}},"responses":{"200":{"description":"The endpoint is working as expected and provide a list of resources.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthCheckDTO"}}}}},"tags":["health-check"]}}},"info":{"title":"Basic Banking App","description":"Sample banking application built in NestJS<br />This file can be downloaded on the \"api-json\" as a json file.","version":"1","contact":{}},"tags":[],"servers":[],"components":{"schemas":{"CreateAccountDto":{"type":"object","properties":{"name":{"type":"string","description":"Account name. MUST be at least 3 characters and could be 50 characters at max."},"type":{"type":"string","description":"Account type. Could be one of the options: \"Corrente\" or \"Poupança\"."}},"required":["name","type"]},"SearchAccountDto":{"type":"object","properties":{"id":{"type":"number","description":"Account code identification. Could be used partial numbers. Ex: 10 will return all records with 10 such as 100 and 1000."},"name":{"type":"string","description":"Account name."},"type":{"type":"string","description":"Account type. Could be: \"Corrente\" or \"Poupança\". Could be used partial values. Ex: \"o\" will return all records with both \"Corrente\" and \"Poupança\"."}},"required":["id","name","type"]},"AccountDto":{"type":"object","properties":{"id":{"type":"number","description":"Account code identification."},"name":{"type":"string","description":"Account name."},"type":{"type":"string","description":"Account type. Could be: \"Corrente\" or \"Poupança\"."},"balance":{"type":"number","description":"Account total balance value at the time of the consulting."}},"required":["id","name","type","balance"]},"SearchAccountsResultDto":{"type":"object","properties":{"count":{"type":"number","description":"Quantity of itens found on the list."},"accounts":{"description":"List of accounts found according to the query parameters.","type":"array","items":{"$ref":"#/components/schemas/AccountDto"}}},"required":["count","accounts"]},"BadRequestExceptionDto":{"type":"object","properties":{"id":{"description":"An array with the error messages.","type":"array","items":{"type":"string"}},"error":{"type":"string","description":"The HTTP Error description."},"statusCode":{"type":"number","description":"The HTTP Error code identification."}},"required":["id","error","statusCode"]},"CreateMovementDto":{"type":"object","properties":{"description":{"type":"string","description":"Movement description."},"origin":{"type":"number","description":"Identification Code of the origin account of the movement. May be null."},"destiny":{"type":"number","description":"Identification Code of the destination account of the movement."},"amount":{"type":"string","description":"String with the amount being changed in the account. Could be positive or negative. Must be passed as string.","example":"1234.33"}},"required":["description","origin","destiny","amount"]},"Movement":{"type":"object","properties":{}},"SearchMovementDto":{"type":"object","properties":{"id":{"type":"number","description":"Account code identification. Could be used partial numbers. Ex: 10 will return all records with 10 such as 100 and 1000."},"description":{"type":"string","description":"Movement description."},"origin":{"type":"number","description":"Identification Code of the origin account of the movement. May be null."},"destiny":{"type":"number","description":"Identification Code of the destination account of the movement."},"type":{"type":"string","description":"Movement type. Could be: \"Deposito\" or \"Saque\"."},"amount":{"type":"string","description":"String with the amount being changed in the account. Could be positive or negative. Must be passed as string.","example":"1234.33"}},"required":["id","description","origin","destiny","type","amount"]},"MovementDto":{"type":"object","properties":{"id":{"type":"number","description":"Movement code identification."},"type":{"type":"string","description":"Movement type. MUST be \"Deposito\" or \"Saque\"."},"status":{"type":"string","description":"Movement status. MUST be \"Started\", \"Received\" or \"Done\". Only \"Received\" and \"Done\" movements will be summed to account balance."},"origin":{"type":"number","description":"The account identification that originates the movement. May not be present if the movement origin are not registered on the system."},"destiny":{"type":"number","description":"The account identification to where the movement transferred value to. May not be present if the destination where the movement will be transferred to is not from the system."},"createdAt":{"format":"date-time","type":"string","description":"The date and time recorded when the movement ocurred."},"description":{"type":"string","description":"Some annotation. May be null if there is no content."},"amount":{"type":"number","description":"Movement value to be transferred."},"userId":{"type":"number","description":"The user identification code that realizes the movement."}},"required":["id","type","status","origin","destiny","createdAt","description","amount","userId"]},"SearchMovementsResultDto":{"type":"object","properties":{"count":{"type":"number","description":"Quantity of itens found on the list."},"movements":{"description":"List of accounts found according to the query parameters.","type":"array","items":{"$ref":"#/components/schemas/MovementDto"}}},"required":["count","movements"]},"HealthCheckDTO":{"type":"object","properties":{"code":{"type":"number","description":"The server situation. Uses the same codes of HTTP CODE responses."},"dynamodb":{"type":"string","description":"Describe the DynamoDB situation.","enum":["Running","Halt"]}},"required":["code","dynamodb"]}}}}